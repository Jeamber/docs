#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: 2014-10-03 08:14+0800\n"
"Last-Translator: TJWORKS <evertang@gmail.com>\n"
"Language-Team: CHINESE <translation@mongoing.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.6.9\n"

#: ../source/tutorial/getting-started.txt:3
msgid "Getting Started with MongoDB"
msgstr "MongoDB 快速入门"

#: ../source/tutorial/getting-started.txt:7
msgid ""
"This tutorial provides an introduction to basic database operations using "
"the :program:`mongo` shell. :program:`mongo` is a part of the standard "
"MongoDB distribution and provides a full JavaScript environment with "
"complete access to the JavaScript language and all standard functions as "
"well as a full database interface for MongoDB. See the :api:`mongo "
"JavaScript API <js>` documentation and the :program:`mongo` shell :doc:"
"`JavaScript Method Reference </reference/method>`."
msgstr ""
"这篇教程通过使用 :program:`mongo` shell 命令行工具介绍一些基本的数据库操"
"作。"

#: ../source/tutorial/getting-started.txt:15
msgid ""
"The tutorial assumes that you're running MongoDB on a Linux or OS X "
"operating system and that you have a running database server; MongoDB does "
"support Windows and provides a Windows distribution with identical "
"operation. For instructions on installing MongoDB and starting the database "
"server, see the appropriate :doc:`installation </installation>` document."
msgstr ""
"这篇教程假设你是在Linux或者OS X上安装并运行了MongoDB数据库服务器。MongoDB同样"
"支持Windows。 如果你想了解一些在Windows上安装运行MongoDB的信息，请参考安装文"
"档：  :doc:`installation </installation>`。"

#: ../source/tutorial/getting-started.txt:23
msgid "Connect to a Database"
msgstr "连接到数据库"

#: ../source/tutorial/getting-started.txt:25
msgid ""
"In this section, you connect to the database server, which runs as :program:"
"`mongod`, and begin using the :program:`mongo` shell to select a logical "
"database within the database instance and access the help text in the :"
"program:`mongo` shell."
msgstr ""
"在这个部分，你会连接到MongoDB数据库服务器，一个 :program:"
"`mongod` 进程实例。然后使用 :program:`mongo` shell 来选择"
"这个实例内的一个数据库并查看一些帮助信息。"

#: ../source/tutorial/getting-started.txt:31
msgid "Connect to a :program:`mongod`"
msgstr "连接到一个 :program:`mongod`"

#: ../source/tutorial/getting-started.txt:33
msgid ""
"From a system prompt, start :program:`mongo` by issuing the :program:`mongo` "
"command, as follows:"
msgstr ""
"在命令行提示符下，输入 :program:`mongo` 命令来启动  :program:`mongo` 程序"

#: ../source/tutorial/getting-started.txt:40
msgid ""
"By default, :program:`mongo` looks for a database server listening on port "
"``27017`` on the ``localhost`` interface. To connect to a server on a "
"different port or interface, use the :option:`--port <mongo --port>` and :"
"option:`--host <mongo --host>` options."
msgstr ""
"默认情况下 :program:`mongo` 程序会自动尝试去连接到本机localhost的 ``27017`` "
"端口。 若要连接到一个不同的服务器或者不同端口，你可以使用参数 :option:`--"
"host <mongo --host>` 。"

#: ../source/tutorial/getting-started.txt:47
msgid "Select a Database"
msgstr "选定一个数据库"

#: ../source/tutorial/getting-started.txt:49
msgid ""
"After starting the :program:`mongo` shell your session will use the ``test`` "
"database by default. At any time, issue the following operation at the :"
"program:`mongo` to report the name of the current database:"
msgstr ""
":program:`mongo` 程序启动时会默认选定 ``test`` 数据库。如果你希望知道当前选定"
"的数据库，使用下述命令来打印出当前的数据库名： "

#: ../source/tutorial/getting-started.txt:57
msgid ""
"From the :program:`mongo` shell, display the list of databases, with the "
"following operation:"
msgstr "在 :program:`mongo` shell 命令行下，用下述命令列出所有数据库:"

#: ../source/tutorial/getting-started.txt:64
msgid "Switch to a new database named ``mydb``, with the following operation:"
msgstr "切换到一个新的数据库 ``mydb``: "

#: ../source/tutorial/getting-started.txt:71
msgid ""
"Confirm that your session has the ``mydb`` database as context, by checking "
"the value of the ``db`` object, which returns the name of the current "
"database, as follows:"
msgstr "通过打印 ``db`` 变量来确认当前数据库是 ``mydb``  数据库："

#: ../source/tutorial/getting-started.txt:79
msgid ""
"At this point, if you issue the ``show dbs`` operation again, it will not "
"include the ``mydb`` database. MongoDB will not permanently create a "
"database until you insert data into that database. The :ref:`getting-started-"
"create-documents` section describes the process for inserting data."
msgstr ""
"这个时候如果你输入 ``show dbs`` 命令， ``mydb`` 将不会在列表里面。MongoDB"
"不会真的在文件系统创建一个数据库，除非你开始插入数据到那个数据库里。关于插入"
"数据请参见 :ref:`getting-started-create-documents`。"

#: ../source/tutorial/getting-started.txt:85
msgid "``show databases`` also returns a list of databases."
msgstr "``show databases`` 也会打印出数据库列表。"

#: ../source/tutorial/getting-started.txt:89
msgid "Display ``mongo`` Help"
msgstr "打印 ``mongo`` 的帮助"

#: ../source/tutorial/getting-started.txt:91
msgid ""
"At any point, you can access help for the :program:`mongo` shell using the "
"following operation:"
msgstr "在任意时候你可以用下述命令得到 :program:`mongo` 的帮助："

#: ../source/tutorial/getting-started.txt:98
msgid ""
"Furthermore, you can append the ``.help()`` method to some JavaScript "
"methods, any cursor object, as well as the ``db`` and ``db.collection`` "
"objects to return additional help information."
msgstr ""
"另外，你可以通过附加 ``.help()`` 到一些JavaScript方法，MongoDB的游标对象，以"
"及  ``db`` 和 ``db.collection`` 对象上面来获取相关的帮助信息："

#: ../source/tutorial/getting-started.txt:105
msgid "Create a Collection and Insert Documents"
msgstr "创建一个集合并插入文档"

#: ../source/tutorial/getting-started.txt:107
msgid ""
"In this section, you insert documents into a new :term:`collection` named "
"``testData`` within the new :term:`database` named ``mydb``."
msgstr ""
"在这一章里，你会插入一些文档到一个新的  :term:`database` 内名叫 ``testData`` "
"的新的 :term:`collection` 里面。"

#: ../source/tutorial/getting-started.txt:111
msgid ""
"MongoDB will create a collection implicitly upon its first use. You do not "
"need to create a collection before inserting data. Furthermore, because "
"MongoDB uses :ref:`dynamic schemas <faq-schema-free>`, you also need not "
"specify the structure of your documents before inserting them into the "
"collection."
msgstr ""
"MongoDB会在一个集合被调用的时候自动创建这个集合。你不需要在插入数据之前显式的创建一"
"个集合。另外，因为MongoDB使用动态模式 :ref:`dynamic schemas <faq-schema-"
"free>`, 你同样也不需要在插入数据之前事先定义文档的结构。"

#: ../source/tutorial/getting-started.txt:117
msgid ""
"From the :program:`mongo` shell, confirm you are in the ``mydb`` database by "
"issuing the following:"
msgstr "从 :program:`mongo` shell 命令行, 确认当前数据库是 ``mydb``："

#: ../source/tutorial/getting-started.txt:124
msgid ""
"If :program:`mongo` does not return ``mydb`` for the previous operation, set "
"the context to the ``mydb`` database, with the following operation:"
msgstr ""
"如果前一个操作 :program:`mongo` 没有返回 ``mydb`` ， 那么可以通过下述命令切换"
"到 ``mydb`` 数据库："

#: ../source/tutorial/getting-started.txt:132
msgid ""
"Create two documents named ``j`` and ``k`` by using the following sequence "
"of JavaScript operations:"
msgstr "创建两个以 ``j`` 和 ``k`` 命名的两个文档："

#: ../source/tutorial/getting-started.txt:140
msgid ""
"Insert the ``j`` and ``k`` documents into the ``testData`` collection with "
"the following sequence of operations:"
msgstr "插入 ``j`` 和 ``k`` 文档到 ``testData`` 集合里面："

#: ../source/tutorial/getting-started.txt:148
msgid ""
"When you insert the first document, the :program:`mongod` will create both "
"the ``mydb`` database and the ``testData`` collection."
msgstr ""
"当你插入第一个文档的时候， :program:`mongod` 会同时创建 ``mydb`` 数据库和 "
"``testData`` 集合。"

#: ../source/tutorial/getting-started.txt:151
msgid ""
"Confirm that the ``testData`` collection exists. Issue the following "
"operation:"
msgstr "验证``testData`` 集合存在："

#: ../source/tutorial/getting-started.txt:158
msgid ""
"The :program:`mongo` shell will return the list of the collections in the "
"current (i.e. ``mydb``) database. At this point, the only collection is "
"``testData``. All :program:`mongod` databases also have a :data:`system."
"indexes <<database>.system.indexes>` collection."
msgstr ""
":program:`mongo` shell 会打印出当前数据库(i.e. ``mydb``) 内的所有集合。目前只"
"有 ``testData`` 一个集合。所有  :program:`mongod` 数据库都包含一个 :data:"
"`system.indexes <<database>.system.indexes>` 集合。"

#: ../source/tutorial/getting-started.txt:163
msgid ""
"Confirm that the documents exist in the ``testData`` collection by issuing a "
"query on the collection using the :method:`~db.collection.find()` method:"
msgstr ""
"使用 :method:`~db.collection.find()` 方法来确认 ``testData`` 集合内有文档存在"

#: ../source/tutorial/getting-started.txt:171
msgid ""
"This operation returns the following results. The :doc:`ObjectId </reference/"
"object-id>` values will be unique:"
msgstr ""
"这个操作返回如下结果。   :doc:`ObjectId </reference/object-id>` 的值会是唯一"
"的："

#: ../source/tutorial/getting-started.txt:179
msgid ""
"All MongoDB documents must have an ``_id`` field with a unique value.  These "
"operations do not explicitly specify a value for the ``_id`` field, so :"
"program:`mongo` creates a unique :doc:`ObjectId </reference/object-id>` "
"value for the field before inserting it into the collection."
msgstr ""
"所有  MongoDB 文档必须有一个 ``_id`` 字段并且字段值在集合内必须是唯一的。 这"
"些操作没有显式的指定  ``_id`` 字段，这种情况下  :program:`mongo` shell会自动"
"为之创建一个 :doc:`ObjectId </reference/object-id>` 作为文档  ``_id`` 字段的"
"值"

#: ../source/tutorial/getting-started.txt:186
msgid "Insert Documents using a For Loop or a JavaScript Function"
msgstr "用For循环或者一个Javascipt方法来插入文档"

#: ../source/tutorial/getting-started.txt:188
msgid ""
"To perform the remaining procedures in this tutorial, first add more "
"documents to your database using one or both of the procedures described in :"
"doc:`/tutorial/generate-test-data`."
msgstr ""
"在进行剩下的操作之前，首先使用文章 :doc:`/tutorial/generate-test-data` 里描述"
"的方法来向你数据库添加更多的文档。"

#: ../source/tutorial/getting-started.txt:193
msgid "Working with the Cursor"
msgstr "使用游标"

#: ../source/tutorial/getting-started.txt:195
msgid ""
"When you query a :term:`collection`, MongoDB returns a \"cursor\" object "
"that contains the results of the query. The :program:`mongo` shell then "
"iterates over the cursor to display the results. Rather than returning all "
"results at once, the shell iterates over the cursor 20 times to display the "
"first 20 results and then waits for a request to iterate over the remaining "
"results. In the shell, use enter ``it`` to iterate over the next set of "
"results."
msgstr ""
"当你查询一个集合（ :term:`collection` ）的时候, MongoDB 会返回一个封装了查询"
"结果的游标（ cursor ）对象。  :program:`mongo` shell 会通过遍历这个游标的指针"
"来显示结果。默认情况下，  :program:`mongo` shell 只会显示游标内头20条记录。如"
"果你希望显示剩余的结果，输入  ``it`` 命令可以获得下20条记录。"

#: ../source/tutorial/getting-started.txt:203
msgid ""
"The procedures in this section show other ways to work with a cursor. For "
"comprehensive documentation on cursors, see :ref:`crud-read-cursor`."
msgstr ""
"这一章节介绍一些其他使用游标的方法。如果希望了解详细的文档，请参见 see :ref:"
"`crud-read-cursor`。"

#: ../source/tutorial/getting-started.txt:208
msgid "Iterate over the Cursor with a Loop"
msgstr "使用循环来遍历游标"

#: ../source/tutorial/getting-started.txt:210
msgid ""
"Before using this procedure, add documents to a collection using one of the "
"procedures in :doc:`/tutorial/generate-test-data`. You can name your "
"database and collections anything you choose, but this procedure will assume "
"the database named ``test`` and a collection named ``testData``."
msgstr ""
"在执行这个操作之前，请参考 :doc:`/tutorial/generate-test-data` 文档来添加更多"
"地数据。你可以任意命名你的数据库或者集合，但是这个操作假设你使用的是 "
"``test`` 数据库内的 ``testData`` 集合。"

#: ../source/tutorial/getting-started.txt:216
msgid ""
"In the MongoDB JavaScript shell, query the ``testData`` collection and "
"assign the resulting cursor object to the ``c`` variable:"
msgstr ""
"在 mongo shell下查询 ``testData`` 集合并把结果游标对象赋值给 ``c`` 变量："

#: ../source/tutorial/getting-started.txt:223
msgid ""
"Print the full result set by using a ``while`` loop to iterate over the "
"``c`` variable:"
msgstr "用  ``while`` 循环遍历  ``c`` 对象:"

#: ../source/tutorial/getting-started.txt:230
msgid ""
"The ``hasNext()`` function returns true if the cursor has documents. The "
"``next()`` method returns the next document. The ``printjson()`` method "
"renders the document in a JSON-like format."
msgstr ""
"如果游标还有更多地文档可用，``hasNext()`` 方法将会返回 true 。   ``next()`` 方法"
"则返回下一个文档。``printjson()`` 方法以JSON形式打印出文档的内容。"

#: ../source/tutorial/getting-started.txt:234
msgid "The operation displays all documents:"
msgstr "这个操作列出所有文档:"

#: ../source/tutorial/getting-started.txt:244
msgid "Use Array Operations with the Cursor"
msgstr "使用数组操作来访问游标"

#: ../source/tutorial/getting-started.txt:246
msgid ""
"The following procedure lets you manipulate a cursor object as if it were an "
"array:"
msgstr "下述操作可以让你把游标对象作为一个数组来操作："

#: ../source/tutorial/getting-started.txt:249
msgid ""
"In the :program:`mongo` shell, query the ``testData`` collection and assign "
"the resulting cursor object to the ``c`` variable:"
msgstr ""
"在 mongo shell下查询 ``testData`` 集合并把结果游标对象赋值给 ``c`` 变量："

#: ../source/tutorial/getting-started.txt:256
msgid ""
"To find the document at the array index ``4``, use the following operation:"
msgstr "使用下述操作去得到数组内第4个文档："

#: ../source/tutorial/getting-started.txt:263
msgid "MongoDB returns the following:"
msgstr "MongoDB返回下述结果："

#: ../source/tutorial/getting-started.txt:269
msgid ""
"When you access documents in a cursor using the array index notation, :"
"program:`mongo` first calls the ``cursor.toArray()`` method and loads into "
"RAM all documents returned by the cursor. The index is then applied to the "
"resulting array. This operation iterates the cursor completely and exhausts "
"the cursor."
msgstr ""
"当使用数组索引方式来访问游标内的文档的时候， :program:`mongo` 首先会调用 "
"``cursor.toArray()`` 方法把所有匹配文档调入到内存。然后再在结果数组上进行查"
"找。这个操作会彻底遍历游标对象。"

#: ../source/tutorial/getting-started.txt:275
msgid ""
"For very large result sets, :program:`mongo` may run out of available memory."
msgstr "如果结果集非常大，mongo shell可能会出现内存不够问题。"

#: ../source/tutorial/getting-started.txt:278
msgid "For more information on the cursor, see :ref:`crud-read-cursor`."
msgstr "更多关于游标的信息，请参考 :ref:`crud-read-cursor`。"

#: ../source/tutorial/getting-started.txt:281
msgid "Query for Specific Documents"
msgstr "查询特定的文档"

#: ../source/tutorial/getting-started.txt:283
msgid ""
"MongoDB has a rich query system that allows you to select and filter the "
"documents in a collection along specific fields and values. See :ref:`read-"
"operations-query-document` and :doc:`/core/read-operations` for a full "
"account of queries in MongoDB."
msgstr ""
"MongoDB丰富的查询语言可以让你按照特定字段及值来选择并过滤文档。 具体请参见 :"
"ref:`read-operations-query-document` 和 :doc:`/core/read-operations`。"

#: ../source/tutorial/getting-started.txt:288
msgid ""
"In this procedure, you query for specific documents in the ``testData`` :"
"term:`collection` by passing a \"query document\" as a parameter to the :"
"method:`~db.collection.find()` method. A query document specifies the "
"criteria the query must match to return a document."
msgstr ""
"在这个操作里，你可以为 :method:`~db.collection.find()` 方法指定一个查询文档"
"（query document）参数来对  ``testData`` 集合进行查询。 一个查询文档可以被用"
"来指定查询条件。"

#: ../source/tutorial/getting-started.txt:293
msgid ""
"In the :program:`mongo` shell, query for all documents where the ``x`` field "
"has a value of ``18`` by passing the ``{ x : 18 }`` query document as a "
"parameter to the :method:`~db.collection.find()` method:"
msgstr ""
"在 :program:`mongo` shell里， 使用 ``{ x : 18 }`` 这个查询文档来查询所有具有"
"一个字段 ``x`` 并且 ``x`` 的值是18的文档："

#: ../source/tutorial/getting-started.txt:301
msgid "MongoDB returns one document that fits this criteria:"
msgstr "MongoDB返回一个符合条件的文档："

#: ../source/tutorial/getting-started.txt:308
msgid "Return a Single Document from a Collection"
msgstr "只返回一个文档"

#: ../source/tutorial/getting-started.txt:310
msgid ""
"With the :method:`~db.collection.findOne()` method you can return a single "
"*document* from a MongoDB collection. The :method:`~db.collection.findOne()` "
"method takes the same parameters as :method:`~db.collection.find()`, but "
"returns a document rather than a cursor."
msgstr ""
"使用 :method:`~db.collection.findOne()` 方法你可以让MongoDB只返回一个文"
"档。  :method:`~db.collection.findOne()` 方法的参数和 :method:`~db."
"collection.find()` 是一样的，不同的是它返回一个具体的文档，而不是一个游标对"
"象。"

#: ../source/tutorial/getting-started.txt:315
msgid ""
"To retrieve one document from the ``testData`` collection, issue the "
"following command:"
msgstr "使用下述操作从 ``testData`` 集合取得一个文档："

#: ../source/tutorial/getting-started.txt:322
msgid ""
"For more information on querying for documents, see the :ref:`read-"
"operations-query-document` and :doc:`/core/read-operations` documentation."
msgstr ""
"更多关于查询文档的资料，请参见 :ref:`read-operations-query-document` 和 :doc:"
"`/core/read-operations` documentation。"

#: ../source/tutorial/getting-started.txt:326
msgid "Limit the Number of Documents in the Result Set"
msgstr "限制结果集的文档数目"

#: ../source/tutorial/getting-started.txt:328
msgid ""
"To increase performance, you can constrain the size of the result by "
"limiting the amount of data your application must receive over the network."
msgstr ""
"为提高查询性能， 你可以限制一次返回结果集的大小来防止在网络上传输太多的数据。"

#: ../source/tutorial/getting-started.txt:332
msgid ""
"To specify the maximum number of documents in the result set, call the :"
"method:`~cursor.limit()` method on a cursor, as in the following command:"
msgstr ""
"在游标对象上调用 :method:`~cursor.limit()` 方法可以限制返回文档的数目： "

#: ../source/tutorial/getting-started.txt:340
msgid ""
"MongoDB will return the following result, with different :doc:`ObjectId </"
"reference/object-id>` values:"
msgstr "MongoDB 会返回下述结果："

#: ../source/tutorial/getting-started.txt:352
msgid "Next Steps with MongoDB"
msgstr "下一步的学习"

#: ../source/tutorial/getting-started.txt:354
msgid ""
"For more information on manipulating the documents in a database as you "
"continue to learn MongoDB, consider the following resources:"
msgstr "关于更多操作数据库文档的信息，请参考以下资料："

#: ../source/tutorial/getting-started.txt:357
msgid ":doc:`/crud`"
msgstr ""

#: ../source/tutorial/getting-started.txt:358
msgid ":doc:`/reference/sql-comparison`"
msgstr ""

#: ../source/tutorial/getting-started.txt:359
msgid ":doc:`/applications/drivers`"
msgstr ""
